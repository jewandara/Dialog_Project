<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>