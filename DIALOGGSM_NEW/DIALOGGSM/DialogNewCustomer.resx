<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>