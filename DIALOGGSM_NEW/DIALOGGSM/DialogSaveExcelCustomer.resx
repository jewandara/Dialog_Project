<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>